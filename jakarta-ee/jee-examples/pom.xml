<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.flowlogix</groupId>
    <artifactId>jee-examples</artifactId>
    <version>10.x-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>JEE Services and PrimeFaces Examples</name>

    <!-- parent is only present for testing profiles -->
    <parent>
        <groupId>com.flowlogix</groupId>
        <artifactId>flowlogix</artifactId>
        <version>10.x-SNAPSHOT</version>
        <relativePath>../..</relativePath>
    </parent>

    <properties>
        <delombok.phase>generate-sources</delombok.phase>
        <javadoc.sourcepath>${project.build.directory}/generated-sources/annotations
            :${project.build.directory}/generated-sources/delombok</javadoc.sourcepath>
        <payara.start.disable>${skipITs}</payara.start.disable>
        <arquillian.graphene.version>3.0.0-alpha.4</arquillian.graphene.version>
        <arquillian.payara.version>3.1</arquillian.payara.version>
        <testcontainers.skip>true</testcontainers.skip>
        <maven.deploy.skip>true</maven.deploy.skip>
        <it.test.parallel>classes</it.test.parallel>
        <!-- con't copy test dependencies for skinny WARs -->
        <excludeClassifiers>tests</excludeClassifiers>
        <japicmp.skip>true</japicmp.skip>
    </properties>

    <!-- tag::dependenciesStart[] -->
    <dependencies>
        <dependency>
            <!-- end::dependenciesStart[] -->
            <groupId>${project.groupId}</groupId>
            <artifactId>flowlogix-jee</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>flowlogix-datamodel</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>${omnifaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <classifier>jakarta</classifier>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta.ee.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>flowlogix-jee</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>flowlogix-datamodel</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>com.flowlogix.depchain</groupId>
            <artifactId>integration-test</artifactId>
            <version>${depchain.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
        </dependency>
        <dependency>
            <groupId>fish.payara.arquillian</groupId>
            <artifactId>arquillian-payara-server-remote</artifactId>
            <version>${arquillian.payara.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Selenium test dependencies -->
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver</artifactId>
            <version>${arquillian.graphene.version}</version>
            <scope>test</scope>
            <type>pom</type>
            <!-- tag::dependenciesEnd[] -->
        </dependency>
    </dependencies>
    <!-- end::dependenciesEnd[] -->

    <!-- tag::depManagementStart[] -->
    <dependencyManagement>
        <dependencies>
        <!-- end::depManagementStart[] -->
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces</artifactId>
                <classifier>jakarta</classifier>
                <version>${primefaces.version}</version>
            </dependency>
            <!-- The below BOM version can't be automated, or be a variable, needs to be the latest in maven central -->
            <!-- tag::bomUsage[] // @replace regex='.*\n' replacement="" -->
            <dependency>
                <groupId>com.flowlogix</groupId>
                <artifactId>flowlogix-bom</artifactId>
                <version>10.0.5</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- end::bomUsage[] // @replace regex='.*\n' replacement="" -->
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-bom</artifactId>
                <version>4.36.0</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        <!-- tag::depManagementEnd[] -->
        </dependencies>
    </dependencyManagement>
    <!-- end::depManagementEnd[] -->

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>get-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-specific-demo-classes</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.flowlogix</groupId>
                                    <artifactId>flowlogix-jee</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>tests</classifier>
                                    <type>test-jar</type>
                                    <includes>
                                        com/flowlogix/demo/jeedao/entities/AlternateEmails*.class,
                                        com/flowlogix/demo/jeedao/entities/UserEntity*.class,
                                        com/flowlogix/demo/jeedao/entities/UserSettings*.class,
                                        com/flowlogix/demo/viewscoped/ViewScoped.class
                                    </includes>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>payara-docker</id>
            <properties>
                <testcontainers.skip>false</testcontainers.skip>
            </properties>
        </profile>
    </profiles>
</project>
